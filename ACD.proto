syntax = "proto2";

/* https://developers.google.com/protocol-buffers/docs/pythontutorial
# $Id$ $Date$
*/
//option optimize_for = LITE_RUNTIME;


// ProtoBuff is Weird: Message name and Enum values are Case-Sensitive; Field names are Case-Insensitive
//
// REMEMBER
// Use CamelCase (with an initial capital) for message names. Ex: SongServerRequest
// Use underscore_separated_names for field names. Ex: song_name


package ACD;

message Empty {
}

message QueueRecord {      /* record in queue_records */
/* show fields from queue_records;
+-------------------+------------------+------+-----+---------+----------------+
| Field             | Type             | Null | Key | Default | Extra          |
+-------------------+------------------+------+-----+---------+----------------+
| id                | int(11) unsigned | NO   | PRI | NULL    | auto_increment |
| queue_account_id  | int(11) unsigned | NO   |     | 0       |                |
| agent_account_id  | int(11) unsigned | YES  |     | NULL    |                |
| from_name         | varchar(64)      | YES  |     | NULL    |                |
| from_phone        | varchar(64)      | NO   |     | 0       |                |
|  to_phone         | varchar(64)      | NO   |     | 0       |                |
| starttime         | int(11)          | NO   |     | 0       |                |
| stoptime          | int(11)          | NO   |     | 0       |                |
| connected_time    | int(11)          | NO   |     | 0       |                |
| disconnected_time | int(11)          | NO   |     | 0       |                |
| reason            | varchar(32)      | NO   |     | 0       |                |
| call_id           | varchar(100)     | YES  |     | NULL    |                |
| caller_key        | varchar(128)     | YES  |     | NULL    |                |
+-------------------+------------------+------+-----+---------+----------------+
*/
    required uint32 id = 1;
    required uint32 queue_account_id    =  2;
    optional uint32 agent_account_id    =  3;
    optional string from_name           =  4;
    required string from_phone          =  5;
    optional string to_phone            =  6;
    required uint64 starttime           =  7;
    optional uint64 stoptime            =  8;
    optional uint64 connected_time      =  9;
    optional uint64 disconnected_time   = 10;
    optional string reason              = 11;
    required string call_id             = 12;
    optional string caller_key          = 13;
};

message AgentData {      /* record in agent_data */
/* show fields from agent_data;
+-------------------------+-------------+------+-----+---------+----------------+
| Field                   | Type        | Null | Key | Default | Extra          |
+-------------------------+-------------+------+-----+---------+----------------+
| id                      | int(8)      | NO   | PRI | NULL    | auto_increment |
| account_id              | int(11)     | NO   | MUL | 0       |                |
| parent_id               | int(8)      | NO   | MUL | 0       |                |
| phone_number            | varchar(64) | NO   |     |         |                |
| hard_login_time         | int(11)     | YES  |     | 0       |                |
| soft_login_time         | int(8)      | YES  |     | 0       |                |
| hard_logoff_time        | int(8)      | YES  |     | 0       |                |
| soft_logoff_time        | int(8)      | YES  |     | 0       |                |
| unanswered_calls_limit  | int(8)      | YES  |     | 1       |                |
| unanswered_calls_cnt    | int(8)      | YES  |     | 0       |                |
| next_call_can_start     | int(8)      | YES  |     | 0       |                |
| last_call_end_time      | int(8)      | YES  |     | 0       |                |
| calls_served            | int(8)      | YES  |     | 0       |                |
| is_queue_supervisor     | int(1)      | YES  |     | 0       |                |
| availability_status     | char(3)     | YES  |     | NA      |                |
| last_call_assigned_time | int(8)      | YES  |     | 0       |                |
| login_status            | int(11)     | YES  |     | 0       |                |
| call_status             | char(3)     | YES  |     | NA      |                |
| call_record_id          | int(11)     | NO   |     | 0       |                |
| last_phone_number       | varchar(64) | NO   |     |         |                |
+-------------------------+-------------+------+-----+---------+----------------+

*/

    required uint32 id                      =  1;
    required uint32 account_id              =  2;
    required uint32 parent_id               =  3;
    required string phone_number            =  4;
    optional uint64 hard_login_time         =  5;
    optional uint64 soft_login_time         =  6;
    optional uint64 hard_logoff_time        =  7;
    optional uint64 soft_logoff_time        =  8;
    optional uint32 unanswered_calls_limit  =  9;
    optional uint32 unanswered_calls_cnt    = 10;
    optional uint64 next_call_can_start     = 11;
    optional uint64 last_call_end_time      = 12;
    optional uint32 calls_served            = 13;
    optional uint32 is_queue_supervisor     = 14;
    optional uint64 last_call_assigned_time = 15;
    optional bool login_status              = 16;
    optional string call_status             = 17;

};

enum AcdEventType       /* ACD report messages Types */
{
    ET_AgentStatus  =  0;
    ET_QueueStatus  =  1;
    ET_CallList     =  2;
    // ..
    ET_Reserver3    =  3;
    ET_Reserver4    =  4;
    ET_Reserver5    =  5;
    ET_Reserver6    =  6;
    ET_Reserver7    =  7;
    ET_Reserver8    =  8;
    ET_Reserver9    =  9;
    //
    ET_CmdUseAgent  = 10;
    ET_CmdNoAgent   = 11;
    ET_CmdGetReport = 12;
};

message AccID {
    required uint32 id = 1;
}

message StringValue {
    optional string value = 1;
}

// AgentStatus <- AccID
message RqstAgentStatus {
    required ACD.AccID id = 1;
}

// AgentStatus -> StringValue
message RspAgentStatus {
    optional ACD.StringValue value = 1;
}

message Call {
    required string call                = 1;
    required uint32 queue_record        = 2;
    optional uint32 temp_queue_id       = 3;
    optional uint32 agent_account_id    = 4;
    optional uint32 flag                = 5;
    optional uint64 _time               = 6;
    required string name                = 7;
    required string number              = 8;
    required uint64 cid                 = 9;
}

message DynamicQueueRecord {
    repeated ACD.Call _mapped_iors = 1;
}
